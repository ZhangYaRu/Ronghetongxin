package com.zhbd.beidoucommunication.ui.activity;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Build;
import android.os.Bundle;
import android.support.annotation.RequiresApi;
import android.text.Editable;
import android.util.Log;
import android.view.KeyEvent;
import android.widget.EditText;

import com.zhbd.beidoucommunication.R;
import com.zhbd.beidoucommunication.base.TitlebarActivity;
import com.zhbd.beidoucommunication.config.Constants;
import com.zhbd.beidoucommunication.db.DatabaseDao;
import com.zhbd.beidoucommunication.http.NetWorkUtil;
import com.zhbd.beidoucommunication.utils.CommUtil;
import com.zhbd.beidoucommunication.utils.DataProcessingUtil;
import com.zhbd.beidoucommunication.utils.ToastUtils;
import com.zhbd.beidoucommunication.widget.WaitDialog;

import butterknife.Bind;
import butterknife.ButterKnife;
import butterknife.OnClick;

public class AddFriendsActivity extends TitlebarActivity {

    @Bind(R.id.et_id_or_number)
    EditText mEtNumber;

    private DatabaseDao dao;
    /**
     * 等待提示框
     */
    private WaitDialog waitDialog;


    // 注册接收者接收广播
    BroadcastReceiver mReceiver = new BroadcastReceiver() {
        @Override
        public void onReceive(Context context, Intent intent) {
            byte def = 0;
            byte registState = intent.getByteExtra("operateState", def);
            int userId = intent.getIntExtra("userId", 0);
            switch (registState) {
                // 添加成功
                case DataProcessingUtil.ADD_FRIENDS_FEEDBACK_SUCCESS:
                    // TODO 如何拿到对应的好友信息 对应的用户信息保存到数据库

                    waitDialog.dismiss();
                    ToastUtils.showToast(AddFriendsActivity.this, R.string.add_friends_success);
                    finish();
                    break;
                // 索引非法
                case DataProcessingUtil.ADD_FRIENDS_FEEDBACK_INDEX_ILLEGAL:
                    waitDialog.dismiss();
                    // 提示用户格式错误
                    ToastUtils.showToast(AddFriendsActivity.this, R.string.format_error);
                    break;
                // 没有该用户
                case DataProcessingUtil.ADD_FRIENDS_FEEDBACK_INDEX_NOT_EXIST:
                    waitDialog.dismiss();
                    // 提示用户没有该用户
                    ToastUtils.showToast(AddFriendsActivity.this, R.string.user_not_exist);
                    break;
            }
        }
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setLayoutRes(R.layout.activity_add_friends);
        initView();
        initData();
    }

    private void initView() {
        ButterKnife.bind(this);
        // 设置标题栏
        setTitleText(R.string.add_friends);
        setLeftText(R.string.home_pager, true);
        setLeftIcon(R.drawable.back_arrow, true);
        setRightIcon(0, false);
        setRightText(0, false);

        // 初始化等待对话框
        waitDialog = new WaitDialog(this, R.string.being_added);
    }

    private void initData() {
        // 注册广播接收者,接收注册反馈
        IntentFilter filter = new IntentFilter();
        filter.addAction(Constants.ACTION_ADD_FRIENDS_FEEKBACK);
        registerReceiver(mReceiver, filter);
    }

    @OnClick(R.id.btn_add_friend_confirm)
    public void addConfirm() {
        Editable text = mEtNumber.getText();
        if (text != null) {
            String number = text.toString();
            checkAndSend(number);
        }
    }

    private void checkAndSend(String number) {
        // 手机号添加
        if (CommUtil.isPhone(number)) {
            byte[] result = DataProcessingUtil.addFriendsDataPackage(number,
                    DataProcessingUtil.ADD_FRIENDS_FOR_PHONE_NUMBER);
            // 请求网络发送数据
            NetWorkUtil.connectServerWithTCPSocket(result);
            waitDialog.show();
        } else if (CommUtil.isIdCard(number)) {
            // 身份证号添加
            byte[] result = DataProcessingUtil.addFriendsDataPackage(number,
                    DataProcessingUtil.ADD_FRIENDS_FOR_IDCARD);
            // 请求网络发送数据
            NetWorkUtil.connectServerWithTCPSocket(result);
            waitDialog.show();
        } else if (CommUtil.isNumber(number)) {
            // 用户id添加
            byte[] result = DataProcessingUtil.addFriendsDataPackage(number,
                    DataProcessingUtil.ADD_FRIENDS_FOR_USER_ID);
            // 请求网络发送数据
            NetWorkUtil.connectServerWithTCPSocket(result);
            waitDialog.show();
        } else {
            // 格式有误
            ToastUtils.showToast(this, getResources().getString(R.string.format_error));
        }
    }

    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)
    @Override
    protected void onDestroy() {
        super.onDestroy();
        if (dao != null) {
            dao.close();
        }
        unregisterReceiver(mReceiver);
    }
}
